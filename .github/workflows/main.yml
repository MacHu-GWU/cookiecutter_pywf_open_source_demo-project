# comprehensive github action yml reference: https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions

---
name: CI

on:
  push: # any push event to master will trigger this
    branches: ["main"]
  pull_request: # any pull request to master will trigger this
    branches: ["main"]
  workflow_dispatch: # allows you to manually trigger run

jobs:
  tests:
    name: "${{ matrix.os }} Python ${{ matrix.python-version }}"
    runs-on: "${{ matrix.os }}" # for all available VM runtime, see this: https://docs.github.com/en/free-pro-team@latest/actions/reference/specifications-for-github-hosted-runners
    env: # define environment variables
      USING_COVERAGE: "3.9,3.10,3.11,3.12,3.13"
    strategy:
      matrix:
        os: ["ubuntu-latest", "windows-latest"]
#        os: ["ubuntu-latest", ] # for debug only
#        os: ["windows-latest", ] # for debug only
#        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        python-version: ["3.11", ] # for debug only
        exclude:
          - os: windows-latest # this is a useless exclude rules for demonstration use only
            python-version: 2.7
    steps:
      - uses: "actions/checkout@v4" # https://github.com/marketplace/actions/checkout
      - uses: "actions/setup-python@v5" # https://github.com/marketplace/actions/setup-python
        with:
          python-version: "${{ matrix.python-version }}"
          cache: "pip"
          # we should create a requirements-poetry.txt file to store the poetry related dependencies
          cache-dependency-path: requirements-poetry.txt
      - name: Install poetry
        run: |
          pip install -r requirements-poetry.txt
      - uses: actions/setup-python@v5
        with:
          python-version: "${{ matrix.python-version }}"
          cache: "poetry"
          # use poetry.lock as cache key
          cache-dependency-path: poetry.lock
      # for condition steps, you should put "if" at begin, and use single quote for logical expression
      - if: matrix.os == 'ubuntu-latest'
        name: "Install dependencies on MacOS or Linux"
        run: |
          set -xe
      - name: "Install dependencies"
        run: |
          pwd
          python -VV
          python -m site
          poetry install --extras test
      - name: "Run pytest"
        run: "poetry run pytest tests --cov=cookiecutter_pywf_open_source_demo --cov-report=xml"
      # don't forget to goto codecov.io, enable your repo, copy the token
      # create an CODECOV_TOKEN env var in GitHub actions secret
      - name: "Upload coverage to Codecov"
        if: "contains(env.USING_COVERAGE, matrix.python-version)"
        uses: "codecov/codecov-action@v5" # https://github.com/marketplace/actions/codecov
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: MacHu-GWU/cookiecutter_pywf_open_source_demo-project
          file: ./coverage.xml
          verbose: true
          fail_ci_if_error: true
